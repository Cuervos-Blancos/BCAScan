import React, { useState } from 'react';
import { StyleSheet, Text, View, Button } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { BarCodeScanner } from 'expo-barcode-scanner';

const Stack = createStackNavigator();

export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Home">
        <Stack.Screen name="Home" component={HomeScreen} />
        <Stack.Screen name="Camera" component={CameraScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

function HomeScreen({ navigation }) {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Home Screen</Text>
      <Button
        title="Go to Camera Screen"
        onPress={() => navigation.navigate('Camera')}
      />
    </View>
  );
}

function CameraScreen() {
  const [hasPermission, setHasPermission] = useState(null);
  const [scanned, setScanned] = useState(false);
  const [numAlumno, setNumAlumno] = useState(null);

  const handleBarCodeScanned = ({ type, data }) => {
    setScanned(true);
    setNumAlumno(data);
  };

  const askForCameraPermission = async () => {
    const { status } = await BarCodeScanner.requestPermissionsAsync();
    setHasPermission(status === 'granted');
  };

  if (hasPermission === null) {
    askForCameraPermission();
    return <Text>Requesting camera permission</Text>;
  }
  if (hasPermission === false) {
    return <Text>No access to camera</Text>;
  }

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Camera Screen</Text>
      <BarCodeScanner
        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}
        style={StyleSheet.absoluteFillObject}
      />
      {scanned && (
        <Button
          title={'Tap to Scan Again'}
          onPress={() => setScanned(false)}
        />
      )}
      {numAlumno && <Text>{`NumAlumno: ${numAlumno}`}</Text>}
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
});



En la pantalla "Camera", se utiliza BarCodeScanner de expo-barcode-scanner para leer códigos QR. Cuando se escanea un código, se guarda en el estado numAlumno y se muestra en la pantalla. El usuario puede escan



// SEMAFORO EN PANTALLA HOME
import React, { useState } from 'react';
import { View, TouchableOpacity, StyleSheet } from 'react-native';

const HomeScreen = () => {
  const [NumAlumno, setNumAlumno] = useState({
    rojo: true,
    amarillo: false,
    verde: false,
  });

  const handlePressRojo = () => {
    setNumAlumno({
      rojo: true,
      amarillo: false,
      verde: false,
    });
  };

  const handlePressAmarillo = () => {
    setNumAlumno({
      rojo: false,
      amarillo: true,
      verde: false,
    });
  };

  const handlePressVerde = () => {
    setNumAlumno({
      rojo: false,
      amarillo: false,
      verde: true,
    });
  };

  return (
    <View style={styles.container}>
      <TouchableOpacity
        style={[
          styles.circle,
          NumAlumno.rojo ? styles.circleRojo : null,
        ]}
        onPress={handlePressRojo}
      />
      <TouchableOpacity
        style={[
          styles.circle,
          NumAlumno.amarillo ? styles.circleAmarillo : null,
        ]}
        onPress={handlePressAmarillo}
      />
      <TouchableOpacity
        style={[
          styles.circle,
          NumAlumno.verde ? styles.circleVerde : null,
        ]}
        onPress={handlePressVerde}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
  },
  circle: {
    width: 50,
    height: 50,
    borderRadius: 25,
    marginHorizontal: 10,
  },
  circleRojo: {
    backgroundColor: 'red',
  },
  circleAmarillo: {
    backgroundColor: 'yellow',
  },
  circleVerde: {
    backgroundColor: 'green',
  },
});

export default HomeScreen;




